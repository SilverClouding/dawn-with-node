{% comment %}
  {% render 'product-swatches', product: product, class: 'swatches--class', product_card: false, is_pdp: false %}

  Setup

  Uses a Metaobject named Swatch Products with the following fields
  * Title (title) - Single Line Text field
  * Products (products) - Product field - List of products

  Stored within Product on a metafield called Swatch Products, referencing the Swatch Products metaobject as One entry.

  Assuming we have three product colours, Blue, Red, and Green, there would be one metaobject with these three products in.
  The metaobject would then get assigned to these three products.

  Uses a Metaobject named Swatches with the following fields
  * Title (title) - Single Line Text field
  * Colour (color) - Color field
  * Colours (colors) - Color field - List of values
  * Pattern (pattern) - File field

  Stored within Product on a metafield called Swatch, referencing the Swatches metaobject as One entry.

  Assuming we're on the Blue product, there would be one metaobject called Blue.
  The reason this is stored as a metaobject is so it can be used across multiple products.

  --

  Logic

  This file loops through each of the products (p) within the Swatch Products metaobject.
  It then loops through the swatches within the Swatches metaobject on the product (p)
  If the current product (product) handle is equal to the product handle (p) it's marked as active
  If we pass the is_pdp flag it will create a link to the relevant product page

  --

  Notes

  Depending on designs of the Quick Add this may need replicating in src/app-layer/components/portals/QuickAdd/Options.tsx
  The SVG markup comes from src/app-layer/context/search/helpers/GetSwatchData.ts
{% endcomment %}
{% if product.metafields.SITE_NAME.swatch_products != blank %}
  {% if is_pdp %}
    <div class="variant-option variant-option--swatches">
      <div class="variant-option__header">
        <div class="variant-option__display">
          <span class="variant-option__name">{{ 'products.product.swatch_select' | t }}</span>
          <span class="variant-option__value">{{ product.metafields.SITE_NAME.swatch.value.title }}</span>
        </div>
      </div>
  {% endif %}
  <ul class="product-swatches{% if class != blank %} {{ class }}{% endif %}">
    {% for p in product.metafields.SITE_NAME.swatch_products.value.products.value %}
      {%- liquid
        comment
          Ensure this logic matches theme-base/snippets/sf-product-metafields.liquid
        endcomment
        assign swatch = p.metafields.SITE_NAME.swatch.value
        assign colorCount = swatch.colors.value.size
        case colorCount
          when 1
            comment
              We want the color to be set
              The pattern exists because I was playing around
            endcomment
            assign color = swatch.color
            assign pattern = blank
          when 2
            comment
              Remove the colour
              The SVG markup comes from src/app-layer/context/search/helpers/GetSwatchData.ts
            endcomment
            assign color = blank
            assign pattern = "data:image/svg+xml,%3Csvg width=\'50\' height=\'50\' fill=\'none\' xmlns=\'http://www.w3.org/2000/svg\'%3E%3Cpath d=\'M50 0v50H0L50 0Z\' fill=\'$0\'/%3E%3Cpath d=\'M0 50V0h50L0 50Z\' fill=\'$1\'/%3E%3C/svg%3E" | replace: '$0', swatch.colors.value[0] | replace: '$1', swatch.colors.value[1] | replace: '#', '%23'
        endcase
        comment
          Always override with the image
        endcomment
        if swatch.pattern != blank
          assign pattern = swatch.pattern | image_url: width: 80, height: 80
        endif
      -%}

      <li>
        {% if is_pdp %}
          <a
            class="product-swatches__swatch{% if p.handle == product.handle %} product-swatches__swatch--active{% endif %}"
            style="--bg: {% if pattern != blank %}url('{{ pattern | replace: '"', '' }}'){% elsif color != blank %}{{ color }}{% endif %}"
            href="{{ p.url }}"
            aria-label="{{ p.title }} in {{ swatch.title }}"
          ></a>
        {% else %}
          <span
            class="product-swatches__swatch{% if p.handle == product.handle %} product-swatches__swatch--active{% endif %}"
            style="--bg: {% if pattern != blank %}url('{{ pattern | replace: '"', '' }}'){% elsif color != blank %}{{ color }}{% endif %}"
            aria-label="{{ p.title }} in {{ swatch.title }}"
          ></span>
        {% endif %}
      </li>
    {% endfor %}
  </ul>
  {% if is_pdp %}
    </div>
  {% endif %}
{% endif %}
